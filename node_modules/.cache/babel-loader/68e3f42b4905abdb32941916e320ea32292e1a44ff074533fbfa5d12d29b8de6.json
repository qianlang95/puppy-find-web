{"ast":null,"code":"var _jsxFileName = \"/Users/silvaliao/Desktop/puppy-find-web/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authUser, setAuthUser] = useState({\n    user: null,\n    role: null,\n    userID: null // Initialize userID state\n  });\n\n  const login = userData => {\n    setAuthUser({\n      ...userData // This will spread all userData properties including userID\n      // If you have specific properties in userData, you can set them individually as well\n      // e.g., user: userData.user, role: userData.role, userID: userData.userID\n    });\n    // Optionally, store user data in localStorage for persistence\n  };\n\n  const logout = () => {\n    setAuthUser({\n      user: null,\n      role: null,\n      userID: null // Reset userID on logout\n    });\n    // Optionally, clear user data from localStorage\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PN9R7nY41P24xuVuTVB5aCjj5cI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authUser","setAuthUser","user","role","userID","login","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/silvaliao/Desktop/puppy-find-web/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [authUser, setAuthUser] = useState({\n    user: null,\n    role: null,\n    userID: null, // Initialize userID state\n  });\n\n  const login = (userData) => {\n    setAuthUser({ \n      ...userData, // This will spread all userData properties including userID\n      // If you have specific properties in userData, you can set them individually as well\n      // e.g., user: userData.user, role: userData.role, userID: userData.userID\n    });\n    // Optionally, store user data in localStorage for persistence\n  };\n\n  const logout = () => {\n    setAuthUser({\n      user: null,\n      role: null,\n      userID: null, // Reset userID on logout\n    });\n    // Optionally, clear user data from localStorage\n  };\n\n  return (\n    <AuthContext.Provider value={{ authUser, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,IAAI,CAAE;EAChB,CAAC,CAAC;;EAEF,MAAMC,KAAK,GAAIC,QAAQ,IAAK;IAC1BL,WAAW,CAAC;MACV,GAAGK,QAAQ,CAAE;MACb;MACA;IACF,CAAC,CAAC;IACF;EACF,CAAC;;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBN,WAAW,CAAC;MACVC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI,CAAE;IAChB,CAAC,CAAC;IACF;EACF,CAAC;;EAED,oBACEX,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,QAAQ;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EACtDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,GAAA,CA9BWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}